!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(NAME)	Makefile	/^$(NAME): 			$(OBJS)$/;"	t
%.o	Makefile	/^%.o: 				%.cpp $(INCLUDE_MAIN)$/;"	t
AR	Makefile	/^AR					= ar -rcs$/;"	m
BLUE	SystemCUnit.hpp	/^# define BLUE /;"	d
BLUE	includes/SystemCUnit.h	/^# define BLUE /;"	d
BUILD_DATE	Makefile	/^BUILD_DATE			= $(shell stat -f "%Sm" -t "%Y-%m-%d %H:%M" $(BUILD_NUMBER))$/;"	m
BUILD_NUMBER	Makefile	/^BUILD_NUMBER		= .build_number$/;"	m
CFLAGS	Makefile	/^CFLAGS				= -D NAME="\\"$(NAME)\\"" -D VERSION="\\"$(CURRENT_VERSION)\\"" -D BUILD="\\"$(CURRENT/;"	m
CURRENT_BUILD	Makefile	/^CURRENT_BUILD		= $(shell cat $(BUILD_NUMBER))$/;"	m
CURRENT_VERSION	Makefile	/^CURRENT_VERSION		= $(shell cat $(VERSION_NUMBER))$/;"	m
CYAN	SystemCUnit.hpp	/^# define CYAN /;"	d
CYAN	includes/SystemCUnit.h	/^# define CYAN /;"	d
DEFAULT_SUITE	SystemCUnit.hpp	/^# define DEFAULT_SUITE$/;"	d
END	SystemCUnit.hpp	/^# define END /;"	d
END	includes/SystemCUnit.h	/^# define END /;"	d
GREEN	SystemCUnit.hpp	/^# define GREEN /;"	d
GREEN	includes/SystemCUnit.h	/^# define GREEN /;"	d
GXX	Makefile	/^GXX             	= g++$/;"	m
INCLUDES	Makefile	/^INCLUDES			= -I.\/includes $/;"	m
INCLUDE_MAIN	Makefile	/^INCLUDE_MAIN		= .\/includes\/$(NAME).h$/;"	m
MAGANTA	SystemCUnit.hpp	/^# define MAGANTA /;"	d
MAGANTA	includes/SystemCUnit.h	/^# define MAGANTA /;"	d
NAME	Makefile	/^NAME				= SystemCUnit$/;"	m
OBJS	Makefile	/^OBJS				= $(SRCS:.cpp=.o)$/;"	m
RED	SystemCUnit.hpp	/^# define RED /;"	d
RED	includes/SystemCUnit.h	/^# define RED /;"	d
RM	Makefile	/^RM					= rm -rf$/;"	m
SCU_GLOBAL_STATE_H	includes/scu_global_state.h	/^# define SCU_GLOBAL_STATE_H$/;"	d
SCU_GLOBAL_STATE_H	sources/scu_global_state.c	/^# define SCU_GLOBAL_STATE_H$/;"	d	file:
SCU_SUITE	includes/scu_suite.h	/^# define SCU_SUITE$/;"	d
SCU_TEST	includes/scu_test.h	/^# define SCU_TEST$/;"	d
SESSION_FILE	Makefile	/^SESSION_FILE    	= Session.vim$/;"	m
SRCS	Makefile	/^SRCS 				= $(shell ls -r sources\/*.cpp)$/;"	m
SYSTEMCUNIT_H	SystemCUnit.hpp	/^# define SYSTEMCUNIT_H$/;"	d
SYSTEMCUNIT_H	includes/SystemCUnit.h	/^# define SYSTEMCUNIT_H$/;"	d
SystemCUnit	README.md	/^# SystemCUnit$/;"	c
VERSION_NUMBER	Makefile	/^VERSION_NUMBER		= .version_number$/;"	m
WHITE	SystemCUnit.hpp	/^# define WHITE /;"	d
WHITE	includes/SystemCUnit.h	/^# define WHITE /;"	d
YELLOW	SystemCUnit.hpp	/^# define YELLOW /;"	d
YELLOW	includes/SystemCUnit.h	/^# define YELLOW /;"	d
all	Makefile	/^all: 				$(NAME)$/;"	t
clean	Makefile	/^clean:$/;"	t
errors	includes/scu_suite.h	/^    size_t              errors;$/;"	m	class:scu_suite	typeref:typename:size_t
fclean	Makefile	/^fclean:				clean$/;"	t
ground	includes/scu_global_state.h	/^    sc_signal<bool>     ground;$/;"	m	class:scu_global_state	typeref:typename:sc_signal<bool>
name	includes/scu_suite.h	/^    char                *name;$/;"	m	class:scu_suite	typeref:typename:char *
new_build	Makefile	/^new_build:			$(SRCS) $(INCLUDE_MAIN)$/;"	t
new_version	Makefile	/^new_version:$/;"	t
power	includes/scu_global_state.h	/^    sc_signal<bool>     power;$/;"	m	class:scu_global_state	typeref:typename:sc_signal<bool>
push	Makefile	/^push:				new_build$/;"	t
re	Makefile	/^re: clean fclean all                                                                    $/;"	t
reset_build	Makefile	/^reset_build:$/;"	t
reset_version	Makefile	/^reset_version:$/;"	t
run	Makefile	/^run: 				$(NAME)$/;"	t
run_test	sources/scu_suite.cpp	/^void                    scu_suite::run_test(char *name, bool(*func)(void))$/;"	f	class:scu_suite	typeref:typename:void
scu_global_state	includes/scu_global_state.h	/^class                   scu_global_state$/;"	c
scu_global_state	sources/scu_global_state.c	/^scu_global_state::scu_global_state()$/;"	f	typeref:typename:scu_global_state::
scu_global_state	sources/scu_global_state.cpp	/^scu_global_state::scu_global_state()$/;"	f	class:scu_global_state
scu_suite	includes/scu_suite.h	/^class                       scu_suite$/;"	c
scu_suite	sources/scu_suite.cpp	/^                        scu_suite::scu_suite(char *name)$/;"	f	class:scu_suite
scu_test	includes/scu_test.h	/^class                       scu_test$/;"	c
scu_test	sources/scu_test.cpp	/^scu_test::scu_test(scu_global_state &state)$/;"	f	class:scu_test
sources/scu_suite.o	Makefile	/^sources\/scu_suite.o : sources\/scu_global_state.o$/;"	t
sources/scu_suite.o	Makefile	/^sources\/scu_suite.o : sources\/scu_test.o$/;"	t
sources/scu_test.o	Makefile	/^sources\/scu_test.o : sources\/scu_global_state.o$/;"	t
state	includes/scu_suite.h	/^    scu_global_state    state;$/;"	m	class:scu_suite	typeref:typename:scu_global_state
state	includes/scu_test.h	/^    scu_global_state        *state;$/;"	m	class:scu_test	typeref:typename:scu_global_state *
test	Makefile	/^test:				ctest$/;"	t
test	sources/scu_suite.cpp	/^void                    scu_suite::test()$/;"	f	class:scu_suite	typeref:typename:void
tests	includes/scu_suite.h	/^    size_t              tests;$/;"	m	class:scu_suite	typeref:typename:size_t
vi	Makefile	/^vi:$/;"	t
